{
  "results": {
    "gsm8k_cot": {
      "exact_match,strict-match": 0.6467020470053071,
      "exact_match_stderr,strict-match": 0.013166337192115686,
      "exact_match,flexible-extract": 0.7232752084912812,
      "exact_match_stderr,flexible-extract": 0.012323047397959795,
      "alias": "gsm8k_cot"
    },
    "gsm8k": {
      "exact_match,strict-match": 0.7376800606520091,
      "exact_match_stderr,strict-match": 0.012116912419925704,
      "exact_match,flexible-extract": 0.7445034116755117,
      "exact_match_stderr,flexible-extract": 0.012013462405460069,
      "alias": "gsm8k"
    },
    "coqa": {
      "em,none": 0.5818333333333334,
      "em_stderr,none": 0.019742016529613524,
      "f1,none": 0.7614558979996341,
      "f1_stderr,none": 0.013685734028377316,
      "alias": "coqa"
    }
  },
  "group_subtasks": {
    "coqa": [],
    "gsm8k": [],
    "gsm8k_cot": []
  },
  "configs": {
    "coqa": {
      "task": "coqa",
      "dataset_path": "EleutherAI/coqa",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "def doc_to_text(doc):\n    # Given a passage p, the conversation history {q1, a1, . . . qi−1, ai−1}\n    # and a question qi, the task is to predict the answer ai\n    doc_text = doc[\"story\"] + \"\\n\\n\"\n    for q, a in zip_longest(\n        doc[\"questions\"][\"input_text\"], doc[\"answers\"][\"input_text\"][:-1]\n    ):  # omit target answer ai\n        question = f\"Q: {q}\\n\\n\"\n        answer = f\"A: {a}\\n\\n\" if a is not None else \"A:\"\n        doc_text += question + answer\n    return doc_text\n",
      "doc_to_target": "def doc_to_target(doc):\n    turn_id = len(doc[\"questions\"][\"input_text\"])\n    # Returns unique answers and valid alternatives (Some questions in CoQA have multiple valid answers).\n    answers = []\n    answer_forturn = doc[\"answers\"][\"input_text\"][turn_id - 1]\n    answers.append(answer_forturn)\n\n    additional_answers = doc.get(\"additional_answers\")\n    if additional_answers:\n        for key in additional_answers:\n            additional_answer_for_turn = additional_answers[key][\"input_text\"][\n                turn_id - 1\n            ]\n            if additional_answer_for_turn.lower() not in map(str.lower, answers):\n                answers.append(additional_answer_for_turn)\n    return answers\n",
      "process_results": "def process_results(doc, results):\n    gold_list = doc_to_target(doc)\n    pred = results[0].strip().split(\"\\n\")[0]\n\n    scores = compute_scores(gold_list, pred)\n    return scores\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "em",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\nQ:"
        ]
      },
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{story}} {{question.input_text|join('\n')}}",
      "metadata": {
        "version": 3.0
      }
    },
    "gsm8k": {
      "task": "gsm8k",
      "group": [
        "math_word_problems"
      ],
      "dataset_path": "gsm8k",
      "dataset_name": "main",
      "training_split": "train",
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Question: {{question}}\nAnswer:",
      "doc_to_target": "{{answer}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": false,
          "regexes_to_ignore": [
            ",",
            "\\$",
            "(?s).*#### ",
            "\\.$"
          ]
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "Question:",
          "</s>",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "strict-match",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
            },
            {
              "function": "take_first"
            }
          ]
        },
        {
          "name": "flexible-extract",
          "filter": [
            {
              "function": "regex",
              "group_select": -1,
              "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 3.0
      }
    },
    "gsm8k_cot": {
      "task": "gsm8k_cot",
      "group": [
        "chain_of_thought"
      ],
      "dataset_path": "gsm8k",
      "dataset_name": "main",
      "test_split": "test",
      "doc_to_text": "Q: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\nA: There are 15 trees originally. Then there were 21 trees after some more were planted. So there must have been 21 - 15 = 6. The answer is 6.\n\nQ: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\nA: There are originally 3 cars. 2 more cars arrive. 3 + 2 = 5. The answer is 5.\n\nQ: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\nA: Originally, Leah had 32 chocolates. Her sister had 42. So in total they had 32 + 42 = 74. After eating 35, they had 74 - 35 = 39. The answer is 39.\n\nQ: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\nA: Jason started with 20 lollipops. Then he had 12 after giving some to Denny. So he gave Denny 20 - 12 = 8. The answer is 8.\n\nQ: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\nA: Shawn started with 5 toys. If he got 2 toys each from his mom and dad, then that is 4 more toys. 5 + 4 = 9. The answer is 9.\n\nQ: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?\nA: There were originally 9 computers. For each of 4 days, 5 more computers were added. So 5 * 4 = 20 computers were added. 9 + 20 is 29. The answer is 29.\n\nQ: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?\nA: Michael started with 58 golf balls. After losing 23 on tuesday, he had 58 - 23 = 35. After losing 2 more, he had 35 - 2 = 33 golf balls. The answer is 33.\n\nQ: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\nA: Olivia had 23 dollars. 5 bagels for 3 dollars each will be 5 x 3 = 15 dollars. So she has 23 - 15 dollars left. 23 - 15 is 8. The answer is 8.\n\nQ: {{question}}\nA:",
      "doc_to_target": "{{answer.split('####')[-1].strip()}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": false,
          "regexes_to_ignore": [
            ",",
            "\\$",
            "(?s).*#### ",
            "\\.$"
          ]
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "Q:",
          "</s>",
          "<|im_end|>"
        ],
        "do_sample": false
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "strict-match",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "The answer is (\\-?[0-9\\.\\,]+)."
            },
            {
              "function": "take_first"
            }
          ]
        },
        {
          "name": "flexible-extract",
          "filter": [
            {
              "function": "regex",
              "group_select": -1,
              "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 3.0,
        "num_fewshot": 8
      }
    }
  },
  "versions": {
    "coqa": 3.0,
    "gsm8k": 3.0,
    "gsm8k_cot": 3.0
  },
  "n-shot": {
    "coqa": 0,
    "gsm8k": 5,
    "gsm8k_cot": 8
  },
  "config": {
    "model": "xhf",
    "model_args": "pretrained=meta-llama/Meta-Llama-3-8B-Instruct,search=True,sparse=0.2,random_sparse=0.3,vsparse=1.0,window_size=64",
    "batch_size": "1",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "f2c0fbb",
  "date": 1717002313.9362712,
  "pretty_env_info": "PyTorch version: 2.1.2+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 20.04.5 LTS (x86_64)\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nClang version: Could not collect\nCMake version: Could not collect\nLibc version: glibc-2.31\n\nPython version: 3.9.19 (main, May  6 2024, 19:43:03)  [GCC 11.2.0] (64-bit runtime)\nPython platform: Linux-5.4.0-139-generic-x86_64-with-glibc2.31\nIs CUDA available: True\nCUDA runtime version: Could not collect\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A100 80GB PCIe\nGPU 1: NVIDIA A100 80GB PCIe\nGPU 2: NVIDIA A100 80GB PCIe\nGPU 3: NVIDIA A100 80GB PCIe\nGPU 4: NVIDIA A100 80GB PCIe\nGPU 5: NVIDIA A100 80GB PCIe\nGPU 6: NVIDIA A100 80GB PCIe\n\nNvidia driver version: 525.125.06\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                    x86_64\nCPU op-mode(s):                  32-bit, 64-bit\nByte Order:                      Little Endian\nAddress sizes:                   46 bits physical, 57 bits virtual\nCPU(s):                          96\nOn-line CPU(s) list:             0-95\nThread(s) per core:              2\nCore(s) per socket:              6\nSocket(s):                       8\nNUMA node(s):                    2\nVendor ID:                       GenuineIntel\nCPU family:                      6\nModel:                           106\nModel name:                      Intel(R) Xeon(R) Gold 6338 CPU @ 2.00GHz\nStepping:                        6\nCPU MHz:                         1999.982\nBogoMIPS:                        3999.96\nVirtualization:                  VT-x\nHypervisor vendor:               KVM\nVirtualization type:             full\nL1d cache:                       1.5 MiB\nL1i cache:                       1.5 MiB\nL2 cache:                        192 MiB\nL3 cache:                        128 MiB\nNUMA node0 CPU(s):               0-47\nNUMA node1 CPU(s):               48-95\nVulnerability Itlb multihit:     Not affected\nVulnerability L1tf:              Not affected\nVulnerability Mds:               Not affected\nVulnerability Meltdown:          Not affected\nVulnerability Mmio stale data:   Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown\nVulnerability Retbleed:          Not affected\nVulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\nVulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:        Mitigation; Enhanced IBRS, IBPB conditional, RSB filling, PBRSB-eIBRS SW sequence\nVulnerability Srbds:             Not affected\nVulnerability Tsx async abort:   Mitigation; TSX disabled\nFlags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology cpuid tsc_known_freq pni pclmulqdq vmx ssse3 fma cx16 pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves wbnoinvd arat avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid md_clear arch_capabilities\n\nVersions of relevant libraries:\n[pip3] numpy==1.26.3\n[pip3] torch==2.1.2+cu121\n[pip3] torchaudio==2.1.2+cu121\n[pip3] torchvision==0.16.2+cu121\n[pip3] triton==2.1.0\n[conda] numpy                     1.26.3                   pypi_0    pypi\n[conda] torch                     2.1.2+cu121              pypi_0    pypi\n[conda] torchaudio                2.1.2+cu121              pypi_0    pypi\n[conda] torchvision               0.16.2+cu121             pypi_0    pypi\n[conda] triton                    2.1.0                    pypi_0    pypi",
  "transformers_version": "4.36.2",
  "upper_git_hash": null
}